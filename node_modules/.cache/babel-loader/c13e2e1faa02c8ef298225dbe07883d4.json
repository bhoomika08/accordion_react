{"ast":null,"code":"var _jsxFileName = \"/Users/vinsol/Documents/React_Exercises/accordion/src/Component/Accordion.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AccordionSection from './AccordionSection';\nimport './accordion.css';\nimport * as actionTypes from '../store/actions.js';\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props); // this.state = { \n    //   openTabs: {}\n    // };\n  } // onClick = label => {\n  //   const {\n  //     props: { allowMultipleOpen },\n  //     state: { openTabs },\n  //   } = this;\n  //   const isOpen = !!openTabs[label];\n  //   if (allowMultipleOpen) {\n  //     this.setState({\n  //       openTabs: {\n  //         ...openTabs,\n  //         [label]: !isOpen\n  //       }\n  //     });\n  //   } else {\n  //     this.setState({\n  //       openTabs: {\n  //         [label]: !isOpen\n  //       }\n  //     });\n  //   }\n  // };\n\n\n  render() {\n    const children = this.props.children;\n    return React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, children.map((child, index) => React.createElement(AccordionSection, {\n      key: index,\n      isOpen: !!this.props.openTabs[child.props.label],\n      label: child.props.label,\n      title: child.props.title,\n      onClick: () => this.props.toggleTab(child.props.label),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, child.props.children)));\n  }\n\n}\n\nAccordion.propTypes = {\n  allowMultipleOpen: PropTypes.bool,\n  children: PropTypes.instanceOf(Object).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    openTabs: state.openTabs\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleTab: () => dispatch({\n      type: actionTypes.TOGGLE,\n      props: this.props\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accordion);","map":{"version":3,"sources":["/Users/vinsol/Documents/React_Exercises/accordion/src/Component/Accordion.js"],"names":["React","Component","PropTypes","connect","AccordionSection","actionTypes","Accordion","constructor","props","render","children","map","child","index","openTabs","label","title","toggleTab","propTypes","allowMultipleOpen","bool","instanceOf","Object","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch","type","TOGGLE"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,iBAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAKhCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACD,GAV+B,CAYhC;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AAAA,UAEIC,QAFJ,GAGH,IAHG,CAELF,KAFK,CAEIE,QAFJ;AAKP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACC,GAAT,CAAa,CAACC,KAAD,EAAOC,KAAP,KACZ,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,KAAvB;AACE,MAAA,MAAM,EAAE,CAAC,CAAC,KAAKL,KAAL,CAAWM,QAAX,CAAoBF,KAAK,CAACJ,KAAN,CAAYO,KAAhC,CADZ;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACJ,KAAN,CAAYO,KAFrB;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACJ,KAAN,CAAYQ,KAHrB;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWS,SAAX,CAAqBL,KAAK,CAACJ,KAAN,CAAYO,KAAjC,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGH,KAAK,CAACJ,KAAN,CAAYE,QANf,CADD,CADH,CADF;AAcD;;AAvD+B;;AAA5BJ,S,CACGY,S,GAAY;AACjBC,EAAAA,iBAAiB,EAAEjB,SAAS,CAACkB,IADZ;AAEjBV,EAAAA,QAAQ,EAAER,SAAS,CAACmB,UAAV,CAAqBC,MAArB,EAA6BC;AAFtB,C;;AAyDrB,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLV,IAAAA,SAAS,EAAE,MAAMU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEvB,WAAW,CAACwB,MAApB;AAA4BrB,MAAAA,KAAK,EAAE,KAAKA;AAAxC,KAAD;AADpB,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AccordionSection from './AccordionSection';\nimport './accordion.css';\nimport * as actionTypes from '../store/actions.js';\n\nclass Accordion extends Component {\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n  constructor(props) {\n    super(props);\n    // this.state = { \n    //   openTabs: {}\n    // };\n  }\n\n  // onClick = label => {\n  //   const {\n  //     props: { allowMultipleOpen },\n  //     state: { openTabs },\n  //   } = this;\n\n  //   const isOpen = !!openTabs[label];\n    \n  //   if (allowMultipleOpen) {\n  //     this.setState({\n  //       openTabs: {\n  //         ...openTabs,\n  //         [label]: !isOpen\n  //       }\n  //     });\n  //   } else {\n  //     this.setState({\n  //       openTabs: {\n  //         [label]: !isOpen\n  //       }\n  //     });\n  //   }\n  // };\n\n  render() {\n    const {\n      props: { children },\n    } = this;\n\n    return (\n      <div className='mainContainer'>\n        {children.map((child,index) => (\n          <AccordionSection key={index}\n            isOpen={!!this.props.openTabs[child.props.label]}\n            label={child.props.label}\n            title={child.props.title}\n            onClick={() => this.props.toggleTab(child.props.label)}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    openTabs: state.openTabs,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleTab: () => dispatch({ type: actionTypes.TOGGLE, props: this.props })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accordion);\n"]},"metadata":{},"sourceType":"module"}