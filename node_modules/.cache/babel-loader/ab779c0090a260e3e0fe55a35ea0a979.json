{"ast":null,"code":"import _objectSpread from \"/Users/vinsol/Documents/React_Exercises/accordion/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from './actions.js';\nconst initialState = {\n  openTabs: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TOGGLE:\n      const isOpen = !!openTabs[label];\n\n      if (action.payload.props.allowMultipleOpen) {\n        return {\n          openTabs: _objectSpread({}, state.openTabs, {\n            [action.payload.label]: !action.payload.props.isOpen\n          })\n        };\n      } else {\n        return {\n          openTabs: {\n            [action.payload.label]: !action.payload.props.isOpen\n          }\n        };\n      }\n\n  } //   onClick = label => {\n  //     const {\n  //       props: { allowMultipleOpen },\n  //       state: { openTabs },\n  //     } = this;\n  //     const isOpen = !!openTabs[label];\n  //     if (allowMultipleOpen) {\n  //       this.setState({\n  //         openTabs: {\n  //           ...openTabs,\n  //           [label]: !isOpen\n  //         }\n  //       });\n  //     } else {\n  //       this.setState({\n  //         openTabs: {\n  //           [label]: !isOpen\n  //         }\n  //       });\n  //     }\n  //   };\n\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/vinsol/Documents/React_Exercises/accordion/src/store/reducer.js"],"names":["actionTypes","initialState","openTabs","reducer","state","action","type","TOGGLE","isOpen","label","payload","props","allowMultipleOpen"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,WAAW,CAACO,MAAjB;AACE,YAAMC,MAAM,GAAG,CAAC,CAACN,QAAQ,CAACO,KAAD,CAAzB;;AACA,UAAGJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqBC,iBAAxB,EAA2C;AACzC,eAAO;AACLV,UAAAA,QAAQ,oBACHE,KAAK,CAACF,QADH;AAEN,aAACG,MAAM,CAACK,OAAP,CAAeD,KAAhB,GAAwB,CAACJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqBH;AAFxC;AADH,SAAP;AAMD,OAPD,MAQK;AACH,eAAO;AACLN,UAAAA,QAAQ,EAAE;AACR,aAACG,MAAM,CAACK,OAAP,CAAeD,KAAhB,GAAwB,CAACJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqBH;AADtC;AADL,SAAP;AAKD;;AAjBL,GADgD,CAoBlD;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACG,SAAOJ,KAAP;AACF,CA5CD;;AA8CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions.js';\n\nconst initialState = {\n  openTabs: {},\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.TOGGLE:\n      const isOpen = !!openTabs[label];\n      if(action.payload.props.allowMultipleOpen) {\n        return {\n          openTabs: {\n            ...state.openTabs,\n            [action.payload.label]: !action.payload.props.isOpen,\n          }\n        }\n      }\n      else {\n        return {\n          openTabs: {\n            [action.payload.label]: !action.payload.props.isOpen,\n          }\n        }\n      }\n  }\n//   onClick = label => {\n//     const {\n//       props: { allowMultipleOpen },\n//       state: { openTabs },\n//     } = this;\n\n//     const isOpen = !!openTabs[label];\n    \n//     if (allowMultipleOpen) {\n//       this.setState({\n//         openTabs: {\n//           ...openTabs,\n//           [label]: !isOpen\n//         }\n//       });\n//     } else {\n//       this.setState({\n//         openTabs: {\n//           [label]: !isOpen\n//         }\n//       });\n//     }\n//   };\n   return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}