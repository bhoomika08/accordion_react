{"ast":null,"code":"import _objectSpread from \"/Users/vinsol/Documents/React_Exercises/single_multiple_accordion/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/vinsol/Documents/React_Exercises/single_multiple_accordion/src/Component/Accordion.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\nimport './accordion.css';\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = label => {\n      const allowMultipleOpen = this.props.allowMultipleOpen,\n            openSections = this.state.openSections;\n      console.log(this);\n      const isOpen = !!openSections[label];\n\n      if (allowMultipleOpen) {\n        this.setState({\n          openSections: _objectSpread({}, openSections, {\n            [label]: !isOpen\n          })\n        });\n      } else {\n        this.setState({\n          openSections: {\n            [label]: !isOpen\n          }\n        });\n      }\n    };\n\n    const _openSections = {};\n    this.state = {\n      openSections: _openSections\n    };\n  }\n\n  render() {\n    const onClick = this.onClick,\n          children = this.props.children,\n          openSections = this.state.openSections;\n    return React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, children.map((child, index) => React.createElement(AccordionSection, {\n      key: index,\n      isOpen: !!openSections[child.props.label],\n      label: child.props.label,\n      title: child.props.title,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, child.props.children)));\n  }\n\n}\n\nAccordion.propTypes = {\n  allowMultipleOpen: PropTypes.bool,\n  children: PropTypes.instanceOf(Object).isRequired\n};\nexport default Accordion;","map":{"version":3,"sources":["/Users/vinsol/Documents/React_Exercises/single_multiple_accordion/src/Component/Accordion.js"],"names":["React","Component","PropTypes","AccordionSection","Accordion","constructor","props","onClick","label","allowMultipleOpen","openSections","state","console","log","isOpen","setState","render","children","map","child","index","title","propTypes","bool","instanceOf","Object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAKhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,OANmB,GAMTC,KAAK,IAAI;AAAA,YAENC,iBAFM,GAIb,IAJa,CAEfH,KAFe,CAENG,iBAFM;AAAA,YAGNC,YAHM,GAIb,IAJa,CAGfC,KAHe,CAGND,YAHM;AAKjBE,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,YAAMC,MAAM,GAAG,CAAC,CAACJ,YAAY,CAACF,KAAD,CAA7B;;AAEA,UAAIC,iBAAJ,EAAuB;AACrB,aAAKM,QAAL,CAAc;AACZL,UAAAA,YAAY,oBACPA,YADO;AAEV,aAACF,KAAD,GAAS,CAACM;AAFA;AADA,SAAd;AAMD,OAPD,MAOO;AACL,aAAKC,QAAL,CAAc;AACZL,UAAAA,YAAY,EAAE;AACZ,aAACF,KAAD,GAAS,CAACM;AADE;AADF,SAAd;AAKD;AACF,KA5BkB;;AAEjB,UAAMJ,aAAY,GAAG,EAArB;AACA,SAAKC,KAAL,GAAa;AAAED,MAAAA,YAAY,EAAZA;AAAF,KAAb;AACD;;AA0BDM,EAAAA,MAAM,GAAG;AAAA,UAELT,OAFK,GAKH,IALG,CAELA,OAFK;AAAA,UAGIU,QAHJ,GAKH,IALG,CAGLX,KAHK,CAGIW,QAHJ;AAAA,UAIIP,YAJJ,GAKH,IALG,CAILC,KAJK,CAIID,YAJJ;AAMP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,QAAQ,CAACC,GAAT,CAAa,CAACC,KAAD,EAAOC,KAAP,KACZ,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,KAAvB;AACE,MAAA,MAAM,EAAE,CAAC,CAACV,YAAY,CAACS,KAAK,CAACb,KAAN,CAAYE,KAAb,CADxB;AAEE,MAAA,KAAK,EAAEW,KAAK,CAACb,KAAN,CAAYE,KAFrB;AAGE,MAAA,KAAK,EAAEW,KAAK,CAACb,KAAN,CAAYe,KAHrB;AAIE,MAAA,OAAO,EAAEd,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGY,KAAK,CAACb,KAAN,CAAYW,QANf,CADD,CADH,CADF;AAcD;;AAvD+B;;AAA5Bb,S,CACGkB,S,GAAY;AACjBb,EAAAA,iBAAiB,EAAEP,SAAS,CAACqB,IADZ;AAEjBN,EAAAA,QAAQ,EAAEf,SAAS,CAACsB,UAAV,CAAqBC,MAArB,EAA6BC;AAFtB,C;AAyDrB,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\nimport './accordion.css';\n\nclass Accordion extends Component {\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n  constructor(props) {\n    super(props);\n    const openSections = {};\n    this.state = { openSections };\n  }\n\n  onClick = label => {\n    const {\n      props: { allowMultipleOpen },\n      state: { openSections },\n    } = this;\n    console.log(this);\n    const isOpen = !!openSections[label];\n    \n    if (allowMultipleOpen) {\n      this.setState({\n        openSections: {\n          ...openSections,\n          [label]: !isOpen\n        }\n      });\n    } else {\n      this.setState({\n        openSections: {\n          [label]: !isOpen\n        }\n      });\n    }\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { children },\n      state: { openSections },\n    } = this;\n    return (\n      <div className='mainContainer'>\n        {children.map((child,index) => (\n          <AccordionSection key={index}\n            isOpen={!!openSections[child.props.label]}\n            label={child.props.label}\n            title={child.props.title}\n            onClick={onClick}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}