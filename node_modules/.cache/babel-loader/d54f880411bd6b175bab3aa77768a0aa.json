{"ast":null,"code":"var _jsxFileName = \"/Users/vinsol/Documents/React_Exercises/single_multiple_accordion/src/Component/Accordion.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\nimport './accordion.css';\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = label => {\n      const openSections = this.state.openSections;\n      const isOpen = !!openSections[label];\n      this.setState({\n        openSections: {\n          [label]: !isOpen\n        }\n      });\n    };\n\n    const _openSections = {};\n    this.props.children.forEach(child => {\n      if (child.props.isOpen) {\n        _openSections[child.props.label] = true;\n      }\n    });\n    this.state = {\n      openSections: _openSections\n    };\n  }\n\n  render() {\n    const onClick = this.onClick,\n          children = this.props.children,\n          openSections = this.state.openSections;\n    return React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, children.map((child, index) => React.createElement(AccordionSection, {\n      key: index,\n      isOpen: !!openSections[child.props.label],\n      label: child.props.label,\n      title: child.props.title,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, child.props.children)));\n  }\n\n}\n\nAccordion.propTypes = {\n  allowMultipleOpen: PropTypes.bool,\n  children: PropTypes.instanceOf(Object).isRequired\n};\nexport default Accordion;","map":{"version":3,"sources":["/Users/vinsol/Documents/React_Exercises/single_multiple_accordion/src/Component/Accordion.js"],"names":["React","Component","PropTypes","AccordionSection","Accordion","constructor","props","onClick","label","openSections","state","isOpen","setState","children","forEach","child","render","map","index","title","propTypes","allowMultipleOpen","bool","instanceOf","Object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAMhCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,OAdmB,GAcTC,KAAK,IAAI;AAAA,YAENC,YAFM,GAGb,IAHa,CAEfC,KAFe,CAEND,YAFM;AAKjB,YAAME,MAAM,GAAG,CAAC,CAACF,YAAY,CAACD,KAAD,CAA7B;AAEA,WAAKI,QAAL,CAAc;AACZH,QAAAA,YAAY,EAAE;AACZ,WAACD,KAAD,GAAS,CAACG;AADE;AADF,OAAd;AAKD,KA1BkB;;AAGjB,UAAMF,aAAY,GAAG,EAArB;AAEA,SAAKH,KAAL,CAAWO,QAAX,CAAoBC,OAApB,CAA4BC,KAAK,IAAI;AACnC,UAAIA,KAAK,CAACT,KAAN,CAAYK,MAAhB,EAAwB;AACtBF,QAAAA,aAAY,CAACM,KAAK,CAACT,KAAN,CAAYE,KAAb,CAAZ,GAAkC,IAAlC;AACD;AACF,KAJD;AAMA,SAAKE,KAAL,GAAa;AAAED,MAAAA,YAAY,EAAZA;AAAF,KAAb;AACD;;AAgBDO,EAAAA,MAAM,GAAG;AAAA,UAELT,OAFK,GAKH,IALG,CAELA,OAFK;AAAA,UAGIM,QAHJ,GAKH,IALG,CAGLP,KAHK,CAGIO,QAHJ;AAAA,UAIIJ,YAJJ,GAKH,IALG,CAILC,KAJK,CAIID,YAJJ;AAMP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,QAAQ,CAACI,GAAT,CAAa,CAACF,KAAD,EAAOG,KAAP,KACZ,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,KAAvB;AACE,MAAA,MAAM,EAAE,CAAC,CAACT,YAAY,CAACM,KAAK,CAACT,KAAN,CAAYE,KAAb,CADxB;AAEE,MAAA,KAAK,EAAEO,KAAK,CAACT,KAAN,CAAYE,KAFrB;AAGE,MAAA,KAAK,EAAEO,KAAK,CAACT,KAAN,CAAYa,KAHrB;AAIE,MAAA,OAAO,EAAEZ,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGQ,KAAK,CAACT,KAAN,CAAYO,QANf,CADD,CADH,CADF;AAcD;;AAtD+B;;AAA5BT,S,CAEGgB,S,GAAY;AACjBC,EAAAA,iBAAiB,EAAEnB,SAAS,CAACoB,IADZ;AAEjBT,EAAAA,QAAQ,EAAEX,SAAS,CAACqB,UAAV,CAAqBC,MAArB,EAA6BC;AAFtB,C;AAuDrB,eAAerB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\nimport './accordion.css';\n\nclass Accordion extends Component {\n\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n  constructor(props) {\n    super(props);\n\n    const openSections = {};\n\n    this.props.children.forEach(child => {\n      if (child.props.isOpen) {\n        openSections[child.props.label] = true;\n      }\n    });\n    \n    this.state = { openSections };\n  }\n\n  onClick = label => {\n    const {\n      state: { openSections },\n    } = this;\n\n    const isOpen = !!openSections[label];\n\n    this.setState({\n      openSections: {\n        [label]: !isOpen\n      }\n    });\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { children },\n      state: { openSections },\n    } = this;\n    return (\n      <div className='mainContainer'>\n        {children.map((child,index) => (\n          <AccordionSection key={index}\n            isOpen={!!openSections[child.props.label]}\n            label={child.props.label}\n            title={child.props.title}\n            onClick={onClick}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}